# 定义锚点
defaults: &defaults
  dockerfilesDir: ./dockerfile
  contextDir: ./context

templateVariables:
  # 宿主中的Stable Diffusion WebUI文件夹路径
  hsd: /mnt/flies/AI_research/Stable_Diffusion/stable-diffusion-webui-master
  # 容器中的Stable Diffusion WebUI文件夹路径
  csd: /home/stable-diffusion-webui
  # 宿主中的 ComfyUI 文件夹路径
  hcu: /mnt/flies/AI_research/Stable_Diffusion/ComfyUI
  # 容器中的 ComfyUI 文件夹路径
  ccu: /home/ComfyUI

# 引用锚点
dockerBuildConfig:
  conda_build:
    <<: *defaults
    tag: conda:jupyter
    dockerfile: Dockerfile.conda
    label: CONDA_IMAGE.LABEL
    hint: CONDA_IMAGE.HINT

  py_build:
    <<: *defaults
    tag: py:3.10.6-torch2.0.0
    dockerfile: Dockerfile.pytorch
    label: PYTORCH_IMAGE.LABEL
    hint: PYTORCH_IMAGE.HINT
    dependencies: [conda_build]

  sdwebui_base_build:
    <<: *defaults
    tag: sdwebui_base:rtx4090
    dockerfile: Dockerfile.sdwebui_base
    label: SDWEBUI_BASE_IMAGE.LABEL
    dependencies: [conda_build, py_build]

  sdwebui_ext_build:
    <<: *defaults
    tag: sdwebui_ext:rtx4090
    dockerfile: Dockerfile.sdwebui_ext
    label: SDWEBUI_EXT_IMAGE.LABEL
    hint: SDWEBUI_EXT_IMAGE.HINT
    dependencies: [conda_build, py_build, sdwebui_base_build]
    endpointBuild: true
    serviceOptions:
      serviceName: sd_service
      containerName: sd_container
      launchDockerfile: Dockerfile.sdwebui_ext.launch
      portMappings:
        JUPYTER_PORT: 33333
        SDWEBUI_PORT: 7860
      mountVolumes:
        - /mnt/flies/AI_research/Stable_Diffusion/.cache:/root/.cache
        - ${hsd}/models:${csd}/models
        - ${hsd}/embeddings:${csd}/embeddings
        - ${hsd}/interrogate:${csd}/interrogate
        - ${hsd}/models/SadTalker/checkpoints:${csd}/extensions/SadTalker/checkpoints/
        - ${hsd}/models/SadTalker/gfpgan:${csd}/extensions/SadTalker/gfpgan/
        - ${hsd}/outputs:${csd}/outputs
        - ${hsd}/extensions/sd-webui-controlnet/models:${csd}/extensions/sd-webui-controlnet/models
        - ${hsd}/extensions/sd-webui-controlnet/annotator/downloads:${csd}/extensions/sd-webui-controlnet/annotator/downloads
        - ${hsd}/cache.json:${csd}/cache.json
        - ${hsd}/config.json:${csd}/config.json
        - /home/lco/GitHub/OneClick-stable-diffusion/configs/wildcards_lib:${csd}/extensions/stable-diffusion-webui-wildcards/wildcards

  lama_cleaner_build:
    <<: *defaults
    tag: lama_cleaner:rtx4090
    launchDockerfile: Dockerfile.lama_cleaner.launch
    dockerfile: Dockerfile.lama_cleaner
    label: LAMA_CLEANER_IMAGE.LABEL
    hint: LAMA_CLEANER_IMAGE.HINT
    dependencies: [conda_build, py_build]
    endpointBuild: true
    serviceOptions:
      serviceName: lama_cleaner
      containerName: lama_cleaner_container
      launchDockerfile: Dockerfile.lama_cleaner.launch
      portMappings:
        LAMA_CLEANER_PORT: 8080
      mountVolumes:
        - /mnt/flies/AI_research/Stable_Diffusion/.cache:/root/.cache

  comfyui_base_build:
    <<: *defaults
    tag: comfyui_base:rtx4090
    launchDockerfile: Dockerfile.comfyui.launch
    dockerfile: Dockerfile.comfyui_base
    label: COMFYUI_BASE_IMAGE.LABEL
    hint: COMFYUI_BASE_IMAGE.HINT
    dependencies: [conda_build, py_build]

  comfyui_ext_build:
    <<: *defaults
    tag: comfyui_ext:rtx4090
    launchDockerfile: Dockerfile.comfyui.launch
    dockerfile: Dockerfile.comfyui_ext
    label: COMFYUI_EXT_IMAGE.LABEL
    hint: COMFYUI_EXT_IMAGE.HINT
    dependencies: [conda_build, py_build, comfyui_base_build]
    endpointBuild: true
    serviceOptions:
      serviceName: comfyui
      containerName: comfyui_container
      launchDockerfile: Dockerfile.comfyui.launch
      portMappings:
        COMFYUI_PORT: 8188
      mountVolumes:
        - /mnt/flies/AI_research/Stable_Diffusion/.cache:/root/.cache
        - ${hcu}/models:${ccu}/models
        - ${hsd}/models/Stable-diffusion:${ccu}/models/checkpoints
        - ${hsd}/extensions/sd-webui-controlnet/models:${ccu}/models/controlnet
        - ${hsd}/models/Lora:${ccu}/models/loras
        - ${hcu}/custom_nodes/comfy_controlnet_preprocessors/ckpts:${ccu}/custom_nodes/comfy_controlnet_preprocessors/ckpts

  tpsmm_base_build:
    <<: *defaults
    tag: tpsmm_base:rtx4090
    launchDockerfile: Dockerfile.tpsmm_base.launch
    dockerfile: Dockerfile.tpsmm_base
    label: TPSMM_BASE_IMAGE.LABEL
    hint: TPSMM_BASE
    dependencies: [conda_build, py_build]
    endpointBuild: true
    serviceOptions:
      serviceName: tpsmm
      containerName: tpsmm_container
      launchDockerfile: Dockerfile.tpsmm_base.launch
      portMappings: []
      mountVolumes:
        - /mnt/flies/AI_research/Thin-Plate-Spline-Motion-Model/checkpoints:/home/Thin-Plate-Spline-Motion-Model/checkpoints
        - /home/lco/下载/tps_docker_demo:/home/Thin-Plate-Spline-Motion-Model/input
        - /home/lco/下载/output:/home/Thin-Plate-Spline-Motion-Model/output
        - /home/lco/GitHub/OneClick-stable-diffusion/python/tpsmm/predict.py:/home/Thin-Plate-Spline-Motion-Model/predict.py
        - /home/lco/GitHub/OneClick-stable-diffusion/python/tpsmm/predictor.py:/home/Thin-Plate-Spline-Motion-Model/predictor.py
        - /home/lco/GitHub/Thin-Plate-Spline-Motion-Model/shape_predictor_68_face_landmarks.dat:/home/Thin-Plate-Spline-Motion-Model/shape_predictor_68_face_landmarks.dat
