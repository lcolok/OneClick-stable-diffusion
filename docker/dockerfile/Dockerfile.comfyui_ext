FROM comfyui_base:rtx4090

WORKDIR $NOTEBOOK_DIR/ComfyUI/custom_nodes

# 设置默认 shell 为 bash，并使用“-i”选项启动shell
SHELL ["/bin/bash", "-c", "-i"]

# 下载grounddino项目并手动编译
RUN cd $NOTEBOOK_DIR && git clone --depth=1 https://github.com/IDEA-Research/GroundingDINO.git;
ENV TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6+PTX;8.9;9.0"
RUN cd $NOTEBOOK_DIR/GroundingDINO/ && python -m pip install . && cd /;

# 安装 grounddino 依赖
# RUN pip install groundingdino-py

RUN apt update && apt install -y curl tree
# 安装 VS Code（code-server）
RUN curl -fsSL https://code-server.dev/install.sh | sh
# 安装 VS Code 扩展
RUN code-server --install-extension ms-python.black-formatter
RUN code-server --install-extension ms-python.python
RUN code-server --install-extension GitHub.copilot-nightly

RUN apt-get update && apt-get install -y pkg-config libcairo2-dev

RUN git clone https://github.com/Fannovel16/comfy_controlnet_preprocessors
RUN cd comfy_controlnet_preprocessors && \
    conda activate py3.10.6 && \
    python -m pip install ftfy && \
    python -m pip install -r requirements.txt && \
    cd ../;

# 创建新的 config.yaml 文件并替换原有的文件
RUN echo -e "annotator_ckpts_path: \"./custom_nodes/comfy_controlnet_preprocessors/ckpts\"\nskip_v1: False" > comfy_controlnet_preprocessors/config.yaml

# RUN cd comfy_controlnet_preprocessors && conda activate py3.10.6 && python install.py

RUN git clone https://github.com/WASasquatch/was-node-suite-comfyui
RUN cd was-node-suite-comfyui && \
    conda activate py3.10.6 && \
    python -m pip install -r requirements.txt

# 在 was-node-suite-comfyui 中创建 repos 文件夹并克隆 BLIP-Python 仓库，以便在 comfyui 中可以调用 BLIP Model Loader 和 BLIP Analyze Image 节点
RUN cd was-node-suite-comfyui && \
    mkdir repos && \
    cd repos && \
    git clone --depth=1 https://github.com/WASasquatch/BLIP-Python && \
    mv BLIP-Python BLIP && \
    cd /;

RUN git clone --depth=1 https://github.com/pythongosssss/ComfyUI-Custom-Scripts;

# RUN git clone --depth=1 https://github.com/xXAdonesXx/NodeGPT && \
#     cd NodeGPT && \
#     mv Textnode.py ../ && \
#     cd ../ && \
#     rm -rf NodeGPT;

RUN git clone --depth=1 https://github.com/ltdrdata/ComfyUI-Impact-Pack

# 使用 sed 命令将 download_url 的几行代码替换为 pass, 以避免在安装时下载文件
RUN cd ComfyUI-Impact-Pack && \
    sed -i 's/download_url("https:\/\/huggingface.co\/dustysys\/ddetailer\/resolve\/main\/mmdet\/bbox\/mmdet_anime-face_yolov3.pth", bbox_path)/pass/g' ./install.py && \
    sed -i 's/download_url("https:\/\/raw.githubusercontent.com\/Bing-su\/dddetailer\/master\/config\/mmdet_anime-face_yolov3.py", bbox_path)/pass/g' ./install.py && \
    sed -i 's/download_url("https:\/\/dl.fbaipublicfiles.com\/segment_anything\/sam_vit_b_01ec64.pth", sam_path)/pass/g' ./install.py

RUN cd ComfyUI-Impact-Pack && \
    conda activate py3.10.6 && \
    python install.py && \
    cd /;
    
RUN git clone --depth=1 https://github.com/biegert/ComfyUI-CLIPSeg
RUN cd ComfyUI-CLIPSeg/custom_nodes && \
    mv clipseg.py ../../ && \
    cd ../../ && \
    rm -rf ComfyUI-CLIPSeg;

RUN git clone --depth=1 https://github.com/ssitu/ComfyUI_NestedNodeBuilder;

RUN git clone --depth=1 https://github.com/ltdrdata/ComfyUI-Workflow-Component;
RUN git clone --depth=1 https://github.com/BlenderNeko/ComfyUI_TiledKSampler;
RUN cd ComfyUI-Workflow-Component && \
    cd components && \
    git clone --depth=1 https://github.com/lcolok/logic_workflow && \
    cd /;

RUN git clone --depth=1 https://github.com/Derfuu/Derfuu_ComfyUI_ModdedNodes

# 安装必要的软件包
RUN apt-get update && apt-get install -y \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*
    
# 下载Loopback节点并解压文件
RUN wget https://civitai.com/api/download/models/32123 -O models.zip \
    && unzip models.zip \
    && rm models.zip

# RUN wget https://github.com/canisminor1990/kitchen-comfyui/releases/download/v1.0.0/web.zip
# # 解压 web.zip 文件并替换目标文件夹
# # RUN rm -rf $NOTEBOOK_DIR/ComfyUI/web && mkdir $NOTEBOOK_DIR/ComfyUI/web
# RUN unzip -o web.zip -d $NOTEBOOK_DIR/ComfyUI/web && rm web.zip

# RUN git clone https://github.com/lcolok/ComfyUI-LogicAI

# 开发中的LogicAI所需要用到的依赖
RUN pip install humanize

# # 因为此自定义插件加载所需耗时太长，为了方便开发调试，临时删除 comfy_controlnet_preprocessors
# RUN rm -rf comfy_controlnet_preprocessors
# RUN mkdir comfy_controlnet_preprocessors
# RUN touch comfy_controlnet_preprocessors/__init__.py