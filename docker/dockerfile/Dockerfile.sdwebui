# 第三阶段：根据输入的参数创建不同的环境镜像
FROM py:3.10.6-torch2.0.0

ENV NOTEBOOK_DIR /home

# 设置默认 shell 为 bash，并使用“-i”选项启动shell
SHELL ["/bin/bash", "-c", "-i"]

RUN cd $NOTEBOOK_DIR && \
git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git; 

RUN cd $NOTEBOOK_DIR/stable-diffusion-webui && \
conda activate py3.10.6 && \
pip install -r requirements.txt && \
cd /; 

RUN cd $NOTEBOOK_DIR/stable-diffusion-webui/ && \
mkdir repositories && \
cd repositories && \
git clone https://github.com/Stability-AI/stablediffusion.git stable-diffusion-stability-ai && \
git -C stable-diffusion-stability-ai checkout cf1d67a6fd5ea1aa600c4df58e5b47da45f6bdbf && \
git clone https://github.com/CompVis/taming-transformers.git && \
git -C taming-transformers checkout 24268930bf1dce879235a7fddd0b2355b84d7ea6 && \
git clone https://github.com/crowsonkb/k-diffusion.git && \
git -C k-diffusion checkout 5b3af030dd83e0297272d861c19477735d0317ec && \
git clone https://github.com/sczhou/CodeFormer.git && \
git -C CodeFormer checkout c5b4593074ba6214284d6acd5f1719b6c5d739af && \
git clone https://github.com/salesforce/BLIP.git && \
git -C BLIP checkout 48211a1594f1321b00f14c9f7a5b4813144b2fb9; 

RUN cd $NOTEBOOK_DIR/stable-diffusion-webui/repositories && \
    conda activate py3.10.6 && \
    pip install -r CodeFormer/requirements.txt

RUN cd $NOTEBOOK_DIR/stable-diffusion-webui && \
    conda activate py3.10.6 && \
    pip install git+https://github.com/mlfoundations/open_clip.git@bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b && \
    pip install git+https://github.com/openai/CLIP.git@d50d76daa670286dd6cacf3bcd80b5e4823fc8e1 && \
    cd /;

# 复制models--openai--clip-vit-large-patch14到/root/.cache/huggingface/hub
COPY /dependencies/models--openai--clip-vit-large-patch14 /root/.cache/huggingface/hub/models--openai--clip-vit-large-patch14

# 删除launch.py中的pip安装依赖的命令
RUN sed -i '/run_pip(f"install -r \\\"{requirements_file}\\\"", "requirements for Web UI")/d' $NOTEBOOK_DIR/stable-diffusion-webui/launch.py

# 插件安装

# 设置工作目录
WORKDIR $NOTEBOOK_DIR/stable-diffusion-webui/extensions/
# 安装中文语言包
RUN git clone --depth=1 https://github.com/dtlnor/stable-diffusion-webui-localization-zh_CN.git
# 安装图库浏览器
RUN git clone --depth=1 https://github.com/AlUlkesh/stable-diffusion-webui-images-browser.git
# 安装Wildcards
RUN git clone --depth=1 https://github.com/AUTOMATIC1111/stable-diffusion-webui-wildcards.git
## 映射wildcards预设文件夹到拓展目录下
# RUN mkdir -p /app/stable-diffusion-webui-localization-zh_CN/configs/wildcards_lib
# RUN ln -s /app/stable-diffusion-webui-localization-zh_CN/configs/wildcards_lib /app/stable-diffusion-webui-images-browser/extensions/stable-diffusion-webui-wildcards/wildcards
# 安装sd_save_intermediate_images插件(保存预测过程的中间图像)
RUN git clone --depth=1 https://github.com/AlUlkesh/sd_save_intermediate_images.git
# 安装openpose-editor
RUN git clone --depth=1 https://github.com/fkunn1326/openpose-editor.git
# 安装CLIP Interrogator extension
RUN git clone --depth=1 https://github.com/pharmapsychotic/clip-interrogator-ext.git
# 安装Additonal-Networks
RUN git clone --depth=1 https://github.com/kohya-ss/sd-webui-additional-networks.git
# 安装sd_web_ui_preset_utils并载入预设
RUN git clone --depth=1 https://github.com/Gerschel/sd_web_ui_preset_utils.git
# RUN mkdir -p /app/OneClick-stable-diffusion/configs/sd_web_ui_preset_utils
# RUN ln -s /app/Gerschel/sd_web_ui_preset_utils/presets.json /app/OneClick-stable-diffusion/configs/sd_web_ui_preset_utils/presets.json
# 安装sd-webui-ar
RUN git clone --depth=1 https://github.com/alemelis/sd-webui-ar.git
# 安装 Aspect Ratio Helper
RUN git clone --depth=1 https://github.com/thomasasfk/sd-webui-aspect-ratio-helper.git
# 安装depthmap2mask
RUN cd $NOTEBOOK_DIR/stable-diffusion-webui/repositories && git clone https://github.com/isl-org/MiDaS midas && cd midas && git checkout b845b78
RUN git clone --depth=1 https://github.com/Extraltodeus/depthmap2mask.git
# 安装ControlNet插件
RUN conda activate py3.10.6 && \
    pip install mediapipe==0.9.1.0 svglib fvcore opencv-python
RUN git clone --depth=1 https://github.com/Mikubill/sd-webui-controlnet.git

WORKDIR $NOTEBOOK_DIR

# 复制启动脚本到容器中
COPY /scripts/*.sh /scripts/
RUN chmod +x /scripts/*.sh

# 启动startup脚本
ENTRYPOINT /scripts/startup.sh